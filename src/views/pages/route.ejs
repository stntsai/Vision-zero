<!DOCTYPE html>
<html lang="en" style="height:100%"
>
  <head>
    <div id="crashHistory" data-test= <%=crashHistory%> type="hidden"></div>
    <%- include('../partials/head') %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="static/style.css" />
    <title>Directions Service</title>
    
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

    <script>    
        var data = document.getElementById("crashHistory").dataset.test;
        var map; 
        
        function getNearbyCrashCoordinates(crashHistory, latlngs){
            var window = 0.0007
    
            var routeCoordinates =[]
            var outputCoordinates = []

            
            var crash_history = [];
            var crashHistory_str = crashHistory.split(",");
            for (let i = 0; i < crashHistory_str.length; i += 2) {
                crash_history.push([parseFloat(crashHistory_str[i]), parseFloat(crashHistory_str[i+1])])
            }
            
            latlngs.forEach(element => {
                routeCoordinates.push([element.lat, element.lng])
            });

            outerloop:
            for (let crashPoint of crash_history){
                innerloop:
                for (let routePoint of routeCoordinates){
                    if((crashPoint[0] <= (routePoint[0]+ window)) && (crashPoint[0] >= routePoint[0]- window)){
                        if((crashPoint[1] <= routePoint[1]+ window) && (crashPoint[1] >= routePoint[1] - window)){
                            // outputCoordinates.indexOf(crashPoint) === -1 ? outputCoordinates.push(crashPoint) : console.log()
                            outputCoordinates.push(crashPoint);
                            break innerloop;
                        };  
                    };  
                };
            };
            console.log(outputCoordinates)
            return outputCoordinates
    }
        
        function initMap() {
            const directionsRenderer = new google.maps.DirectionsRenderer();
            const directionsService = new google.maps.DirectionsService();
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 10,
                center: { lat: 40.73, lng: -73.94 },
                disableDefaultUI: true,
            });

            directionsRenderer.setMap(map);
            directionsRenderer.setPanel(document.getElementById("sidebar"));

            const control = document.getElementById("floating-panel");

            map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

            const onChangeHandler = function () {
                calculateAndDisplayRoute(directionsService, directionsRenderer);
            };

            document.getElementById("searchButton").addEventListener("click", onChangeHandler);
        }

        function calculateAndDisplayRoute(directionsService, directionsRenderer) {
            const mode = document.querySelector('input[name="mode"]:checked').value;
            const start = document.getElementById("origin").value;
            const end = document.getElementById("destination").value;
            
            var modeOption = google.maps.TravelMode.DRIVING;

            if (mode == "walking"){
                modeOption = google.maps.TravelMode.WALKING;
            } else if (mode == "bicycling") {
                modeOption = google.maps.TravelMode.BICYCLING;
            } else if (mode == "transit") {
                modeOption = google.maps.TravelMode.TRANSIT;
            }

            var latlngs;
            var results;
            directionsService
                .route({
                    origin: start,
                    destination: end,
                    travelMode: modeOption,
                })
                .then((response) => {
                    directionsRenderer.setDirections(response);
                    latlngs = JSON.parse(JSON.stringify(response.routes[0]["overview_path"]));
                    results = getNearbyCrashCoordinates(data, latlngs);

                    for (let res of results){
                        var cood = res[0].toString() + ", " + res[1].toString();
                        console.log(cood);
                        var contentString =
                            '<div id="content">' +
                            '<div id="siteNotice">' +
                            "</div>" +
                            '<h1 id="firstHeading" class="firstHeading">' + cood + '</h1>' +
                            '<div id="bodyContent">' +
                            "</div>" +
                            "</div>";

                        var marker = new google.maps.Marker({  
                            map: map, 
                            position: { lat: res[0], lng: res[1] },
                            icon: new google.maps.MarkerImage('static/exclamation.svg',
                                                                null, null, null, new google.maps.Size(20,22)),
                        });

                        map.setCenter(marker.getPosition())

                        var content = '<div id="content">' +
                            '<div id="siteNotice">' +
                            "</div>" +
                            '<h1 id="firstHeading" class="firstHeading">' + cood + '</h1>' +
                            '<div id="bodyContent">' +
                            "</div>" +
                            "</div>";

                        var infowindow = new google.maps.InfoWindow();

                        google.maps.event.addListener(marker,'click', (function(marker,content,infowindow){ 
                            return function() {
                            infowindow.setContent(content);
                            infowindow.open(map,marker);
                            };
                        })(marker,content,infowindow)); 
                    }
                })
                .catch((e) => {
                    if ((start == "") || (end == "")) {
                        alert("Please enter addresses.");
                    } else {
                        window.alert("Directions request failed");
                        console.log(status);
                    }
                });
        }

        window.initMap = initMap;
    </script>
    <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyChvBupfwisVPAWC7pJOS-RlKAuWjrLymw&callback=initMap"
    >
        initMap()
    </script>
  </head>

  <body>
    <header>
        <!-- change to test -->
        <%- include('../partials/nav', { email: email }) %> 
    </header>
<div id="navigation-app"></div>
<div id="container">
    <div id="map"></div>
    <div id="sidebar"></div>
  </div>
 <div class="card" id="search-card">
    <div class="control" style="left: 16%;top: 2%; color: #635E5E;">
        <label class="radio">
            <input type="radio" value="driving" name="mode"  style="margin-right: 8px;" checked>
                Driving
        </label>
        <label class="radio">
            <input type="radio" value="bicycling" name="mode" style="margin-right: 8px;">
                Bicycling
        </label>
        <label class="radio">
            <input type="radio" value="transit" name="mode" style="margin-right: 8px;">
                Transit
        </label>
        <label class="radio">
            <input type="radio" value="walking" name="mode" style="margin-right: 8px;">
                Walking
        </label>
    </div>

    <div >

        <input id="origin" class="address-input"
            
                required type="text" 
                name="start-point"  
                placeholder="Origin" 
                type="text" >

        <!-- <i class="fas fa-arrow-right fas fa-2x" style="padding-top: 15px; 
                                                        color: #7BB6D9;
                                                        margin-left: 10px;"></i> -->


        <input id="destination"
               required type="text" 
               class="address-input"
               name="destination"  
               placeholder="Destination"
                type="text"
                >
        <a href="/sign-in" >
        <a id="searchButton" >
            Go
        </a>
    </div>
    </div>
    
    </body>
    <!-- 
     The `defer` attribute causes the callback to execute after the full HTML
     document has been parsed. For non-blocking uses, avoiding race conditions,
     and consistent behavior across browsers, consider loading using Promises
     with https://www.npmjs.com/package/@googlemaps/js-api-loader.
    -->

  <%- include('../partials/footer') %>
</html>