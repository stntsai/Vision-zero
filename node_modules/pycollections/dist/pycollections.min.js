/*! pycollections 07-12-2015 */
!function(root){"use strict";Number.isNaN||(Number.isNaN=function(a){return a!=a}),Array.isArray||(Array.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)});var DictKeyNotFound=function(a){arguments.length?(this.keyWasSupplied=!0,this.key=a):this.keyWasSupplied=!1},DictKeyNotHashable=function(a){this.key=a},TYPE_BOOLEAN=typeof!0,TYPE_NAN=String(NaN),TYPE_NULL=String(null),TYPE_NUMBER="number",TYPE_STRING="string",TYPE_UNDEFINED="undefined",TYPES={};TYPES[TYPE_BOOLEAN]=!0,TYPES[TYPE_NAN]=!0,TYPES[TYPE_NULL]=!0,TYPES[TYPE_NUMBER]=!0,TYPES[TYPE_STRING]=!0,TYPES[TYPE_UNDEFINED]=!0;var GET_TYPE=function(a){return null===a?TYPE_NULL:Number.isNaN(a)?TYPE_NAN:typeof a},Dict=function(a){this.clear(),void 0!==a&&this.update(a)};Dict.fromKeys=function(a,b){for(var c=new Dict,d=0,e=a.length;e>d;++d)c.set(a[d],b);return c},Dict.checkKeyIsHashable_=function(a){if(!TYPES[GET_TYPE(a)])throw new DictKeyNotHashable(a)},Dict.prototype.clear=function(){var a={};for(var b in TYPES)a[b]={};this.dict_=a},Dict.prototype.copy=function(){return new Dict(this)},Dict.prototype.set=function(a,b){if(Dict.checkKeyIsHashable_(a),arguments.length<2)throw Error("Must supply a key and a value.");return this.dict_[GET_TYPE(a)][a]=b},Dict.prototype.update=function(a){var b=this.set.bind(this);if(a instanceof Dict)a.iteritems(b);else if(Array.isArray(a))for(var c=0,d=a.length;d>c;++c){var e=a[c];b(e[0],e[1])}else{if("object"!=typeof a)throw Error("Cannot update dict from type: "+typeof a);var f=Object.keys(a);for(c=0,d=f.length;d>c;++c){var g=f[c];b(g,a[g])}}},Dict.prototype.hasKey=function(a){return Dict.checkKeyIsHashable_(a),this.dict_[GET_TYPE(a)].hasOwnProperty(a)},Dict.prototype.get=function(a,b){var c=arguments.length;if(!c)throw Error("Must supply a key");var d=this.hasKey(a);if(1===c&&!d)throw new DictKeyNotFound(a);return d?this.dict_[GET_TYPE(a)][a]:b},Dict.prototype.del=function(a){if(!this.hasKey(a))throw new DictKeyNotFound(a);delete this.dict_[GET_TYPE(a)][a]},Dict.prototype.pop=function(a,b){var c=this.hasKey(a);if(1===arguments.length&&!c)throw new DictKeyNotFound(a);var d=this.get(a,b);return c&&this.del(a),d},Dict.prototype.iterkeys=function(a){this.iteritems(function(b,c,d){a(b,d)})},Dict.prototype.keys=function(){var a=[];return this.iteritems(function(b){a.push(b)}),a},Dict.prototype.getFirstKey=function(){var a,b=!1;if(this.iteritems(function(c){b||(a=c,b=!0)}),!b)throw new DictKeyNotFound;return a},Dict.prototype.getFirstMatchingKey=function(a){var b,c=!1;if(this.iteritems(function(d,e,f){!c&&a(d,f)&&(b=d,c=!0)}),!c)throw new DictKeyNotFound;return b},Dict.prototype.popitem=function(){var a=this.getFirstKey();return[a,this.pop(a)]},Dict.prototype.length=function(){var a=0;return this.iteritems(function(){++a}),a},Dict.prototype.isEmpty=function(){return!this.length()},Dict.prototype.iteritems=function(a){var b,c=this.dict_;for(b in c[TYPE_BOOLEAN])a("true"===b?!0:!1,c[TYPE_BOOLEAN][b],this);for(b in c[TYPE_NUMBER])a(Number(b),c[TYPE_NUMBER][b],this);for(b in c[TYPE_STRING])a(b,c[TYPE_STRING][b],this);for(b in c[TYPE_NAN])a(NaN,c[TYPE_NAN][b],this);for(b in c[TYPE_NULL])a(null,c[TYPE_NULL][b],this);for(b in c[TYPE_UNDEFINED])a(void 0,c[TYPE_UNDEFINED][b],this)},Dict.prototype.items=function(){var a=[];return this.iteritems(function(b,c){a.push([b,c])}),a},Dict.prototype.itervalues=function(a){this.iteritems(function(b,c,d){a(c,d)})},Dict.prototype.values=function(){var a=[];return this.iteritems(function(b,c){a.push(c)}),a},Dict.prototype.setOneNewValue=function(a,b){return this.set(a,b(this.get(a),a,this))},Dict.prototype.setSomeNewValues=function(a,b){for(var c=0,d=a.length;d>c;++c)this.setOneNewValue(a[c],b)},Dict.prototype.setAllNewValues=function(a){this.iteritems(function(b,c,d){d.setOneNewValue(b,a)})};var DefaultDict=function(a,b){if("function"!=typeof a)throw Error("Must supply a default function.");this.default_=a,Dict.call(this,b)};DefaultDict.constructor=Dict,DefaultDict.prototype=Object.create(Dict.prototype),DefaultDict.prototype.get=function(a){return arguments.length>1?Dict.prototype.get.apply(this,arguments):this.hasKey(a)?Dict.prototype.get.call(this,a):this.set(a,this.default_())},DefaultDict.fromKeys=function(a,b,c){for(var d=new DefaultDict(a),e=0,f=b.length;f>e;++e)d.set(b[e],c);return d},DefaultDict.prototype.copy=function(){return new DefaultDict(this.default_,this)};var GET_ZERO=function(){return 0},Counter=function(a){DefaultDict.call(this,GET_ZERO,a)};Counter.constructor=DefaultDict,Counter.prototype=Object.create(DefaultDict.prototype),Counter.getIncrementor=function(a){return function(b){return b+a}},Counter.fromKeys=function(){throw Error("Not implemented on Counter.")},Counter.prototype.copy=function(){return new Counter(this)},Counter.prototype.update=function(a){var b=a instanceof Dict,c=Array.isArray(a),d=!c&&!b&&"object"==typeof a;if(this.isEmpty()&&(b||d))return DefaultDict.prototype.update.call(this,a);if(b){var e=this;a.iteritems(function(a,b){e.setOneNewValue(a,Counter.getIncrementor(b))})}else if(c)this.setSomeNewValues(a,Counter.getIncrementor(1));else if(d)for(var f=Object.keys(a),g=0,h=f.length;h>g;++g){var i=f[g];this.setOneNewValue(i,Counter.getIncrementor(a[i]))}else DefaultDict.prototype.update.call(this,a)},Counter.prototype.iterelements=function(a){this.iteritems(function(b,c,d){for(var e=0;c>e;++e)a(b,e,c,d)})},Counter.prototype.elements=function(){var a=[];return this.iterelements(function(b){a.push(b)}),a},Counter.prototype.subtract=function(a){if(a instanceof Dict){var b=this;a.iteritems(function(a,c){b.setOneNewValue(a,Counter.getIncrementor(-c))})}else if(Array.isArray(a))this.setSomeNewValues(a,Counter.getIncrementor(-1));else{if("object"!=typeof a)throw Error("Must subtract Dict, Array, or Object.");for(var c=Object.keys(a),d=0,e=c.length;e>d;++d){var f=c[d];this.setOneNewValue(f,Counter.getIncrementor(-a[f]))}}},Counter.prototype.mostCommon=function(a){var b=this.items().sort(function(a,b){return b[1]-a[1]});return arguments.length?b.slice(0,a):b},Counter.prototype.leastCommon=function(a){var b=this.items().sort(function(a,b){return a[1]-b[1]});return arguments.length?b.slice(0,a):b};var OrderedDict=function(a){Dict.call(this,a)};OrderedDict.constructor=Dict,OrderedDict.prototype=Object.create(Dict.prototype),OrderedDict.fromKeys=function(a,b){for(var c=new OrderedDict,d=0,e=a.length;e>d;++d)c.set(a[d],b);return c},OrderedDict.prototype.clear=function(){this._orderedKeys=[],this._keyIndices=new Dict,Dict.prototype.clear.call(this)},OrderedDict.prototype.copy=function(){return new OrderedDict(this)},OrderedDict.prototype.set=function(a,b){var c=this.hasKey(a),d=Dict.prototype.set.apply(this,arguments);return!c&&this._keyIndices.set(a,this._orderedKeys.push(a)-1),d};var DECREMENT_VALUE=function(a){return a-1};OrderedDict.prototype.del=function(a){for(var b=Dict.prototype.del.call(this,a),c=this._keyIndices.pop(a),d=c+1,e=this.length();e>d;++d)this._keyIndices.setOneNewValue(this._orderedKeys[d],DECREMENT_VALUE);return this._orderedKeys.splice(c,1),b},OrderedDict.prototype.iteritems=function(a){for(var b=0,c=this.length();c>b;++b){var d=this._orderedKeys[b];a(d,this.get(d),this)}},OrderedDict.prototype.length=function(){return this._orderedKeys.length},OrderedDict.prototype.getFirstKey=function(){if(!this.length())throw new DictKeyNotFound;return this._orderedKeys[0]};var VALID_NAME=/^[a-zA-Z\_]+[a-zA-Z0-9\_]*$/,RESERVED_WORDS={"break":!0,"case":!0,"class":!0,"catch":!0,"const":!0,"continue":!0,"debugger":!0,"default":!0,"delete":!0,"do":!0,"else":!0,"export":!0,"extends":!0,"finally":!0,"for":!0,"function":!0,"if":!0,"import":!0,"in":!0,"instanceof":!0,let:!0,"new":!0,"return":!0,"super":!0,"switch":!0,"this":!0,"throw":!0,"try":!0,"typeof":!0,"var":!0,"void":!0,"while":!0,"with":!0,"yield":!0,"enum":!0,await:!0};Object.freeze(RESERVED_WORDS);var NamedTupleToString=function(){for(var a=this.fields,b=[name,"("],c=0,d=this.length;d>c;++c)b.push(a[c]+"="+String(this[c])),d-1>c&&b.push(", ");return b.push(")"),b.join("")},NamedTupleAsDict=function(){for(var a=new OrderedDict,b=0;b<this.length;++b)a.set(this.fields[b],this[b]);return a},NamedTuple=function(name,props){if("string"!=typeof name)throw Error("must include a string name");if(!Array.isArray(props))throw TypeError("props must be an array");if(!VALID_NAME.test(name))throw Error("invalid name");if(RESERVED_WORDS[name])throw Error("cannot use reserved word as name");var nargs=props.length,container={},code=["container.myClass = function "+name+"() {",'if (arguments.length !== nargs) throw Error(nargs + " args required");',"for (var i = 0; i < nargs; ++i) this[props[i]] = this[i] = arguments[i];",'Object.defineProperty(this, "length", {"enumerable": false, "value": nargs});','Object.defineProperty(this, "fields", {"enumerable": false, "value": props});','Object.defineProperty(this, "asDict", {"enumerable": false, "value": NamedTupleAsDict});','Object.defineProperty(this, "asArray", {"enumerable": false, "value": Array.prototype.slice});','Object.defineProperty(this, "toString", {"enumerable": false, "value": NamedTupleToString});',"Object.freeze(this);","Object.seal(this);","};"].join("\n");eval(code);var myClass=container.myClass;return myClass.constructor=Array,myClass.prototype=Object.create(Array.prototype),myClass},pycollections={DictKeyNotFound:DictKeyNotFound,DictKeyNotHashable:DictKeyNotHashable,Dict:Dict,DefaultDict:DefaultDict,Counter:Counter,OrderedDict:OrderedDict,NamedTuple:NamedTuple,RESERVED_WORDS:RESERVED_WORDS};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(module.exports=pycollections),exports.pycollections=pycollections):"function"==typeof define&&define.amd?define("pycollections",[],function(){return pycollections}):root.pycollections=pycollections}(this);